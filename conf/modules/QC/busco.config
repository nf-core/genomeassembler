process {
    withName: '.*:ASSEMBLE:.*:BUSCO' {
        ext.prefix = { "${meta.id}_assembly-${lineage}" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/BUSCO/" },
            mode: params.publish_dir_mode,
            pattern: "*{-busco,_summary}*",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: '.*PILON:.*:BUSCO' {
        ext.prefix = { "${meta.id}_pilon-${lineage}" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/BUSCO/" },
            mode: params.publish_dir_mode,
            pattern: "*{-busco,_summary}*",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: '.*MEDAKA:.*:BUSCO' {
        ext.prefix = { "${meta.id}_medaka-${lineage}" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/BUSCO/" },
            mode: params.publish_dir_mode,
            pattern: "*{-busco,_summary}*",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: '.*LINKS:.*:BUSCO' {
        ext.prefix = { "${meta.id}_links-${lineage}" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/BUSCO/" },
            mode: params.publish_dir_mode,
            pattern: "*{-busco,_summary}*",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: '.*LONGSTITCH:.*:BUSCO' {
        ext.prefix = { "${meta.id}_longstitch-${lineage}" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/BUSCO/" },
            mode: params.publish_dir_mode,
            pattern: "*{-busco,_summary}*",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    // avoid catching ragtag from ont_on_hifi assembly
    withName: '.*:SCAFFOLD:.*RAGTAG:.*:BUSCO' {
        ext.prefix = { "${meta.id}_ragtag-${lineage}" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/BUSCO/" },
            mode: params.publish_dir_mode,
            pattern: "*{-busco,_summary}*",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
