process {
    withName: '.*:ASSEMBLE:.*:MERQURY' {
        ext.prefix = { "${meta.id}_assembly" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/merqury/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: '.*PILON:.*:MERQURY' {
        ext.prefix = { "${meta.id}_pilon" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/merqury/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: '.*MEDAKA:.*:MERQURY' {
        ext.prefix = { "${meta.id}_medaka" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/merqury/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: '.*LINKS:.*:MERQURY' {
        ext.prefix = { "${meta.id}_links" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/merqury/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: '.*LONGSTITCH:.*:MERQURY' {
        ext.prefix = { "${meta.id}_longstitch" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/merqury/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    // avoid catching ragtag from ont_on_hifi assembly
    withName: '.*:SCAFFOLD:.*RAGTAG:.*:MERQURY' {
        ext.prefix = { "${meta.id}_ragtag" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/merqury/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
