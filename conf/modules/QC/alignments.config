process {
    // Refence
    withName: '.*MAP_TO_REF.*' {
        ext.prefix = { "${meta.id}_to_reference" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/alignments/reference/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = {
            (meta.qc_reads == 'ont' ? "-ax lr:hq" : "-ax map-hifi")
        }
    }
    // Assembly mappings
    withName: '.*ASSEMBLE:.*MAP_TO_ASSEMBLY.*' {
        ext.prefix = { "${meta.id}_assembly" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/alignments/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = {
            (meta.qc_reads == 'ont' ? "-ax lr:hq" : "-ax map-hifi")
        }
    }
    withName: '.*MEDAKA:.*MAP_TO_ASSEMBLY.*' {
        ext.prefix = { "${meta.id}_medaka" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/alignments/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = {
            (meta.qc_reads == 'ont' ? "-ax lr:hq" : "-ax map-hifi")
        }
    }
    withName: '.*PILON:.*MAP_TO_ASSEMBLY.*' {
        ext.prefix = { "${meta.id}_pilon" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/alignments/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = {
            (meta.qc_reads == 'ont' ? "-ax lr:hq" : "-ax map-hifi")
        }
    }
    withName: '.*LONGSTITCH:.*MAP_TO_ASSEMBLY.*' {
        ext.prefix = { "${meta.id}_longstitch" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/alignments/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = {
            (meta.qc_reads == 'ont' ? "-ax lr:hq" : "-ax map-hifi")
        }
    }
    withName: '.*LINKS:.*MAP_TO_ASSEMBLY.*' {
        ext.prefix = { "${meta.id}_links" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/alignments/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = {
            (meta.qc_reads == 'ont' ? "-ax lr:hq" : "-ax map-hifi")
        }
    }
    withName: '.*RAGTAG:.*MAP_TO_ASSEMBLY.*' {
        ext.prefix = { "${meta.id}_ragtag" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/alignments/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = {
            (meta.qc_reads == 'ont' ? "-ax lr:hq" : "-ax map-hifi")
        }
    }
}
