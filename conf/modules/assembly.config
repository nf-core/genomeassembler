process {
    withName: FLYE {
        ext.args = {
            [
                meta.genome_size ? "--genome-size ${meta.genome_size}" : '',
                params.flye_args
            ].join(" ").trim()
        }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly/flye/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: HIFIASM {
        ext.args = { [ params.hifiasm_args ].join(" ").trim() }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly/hifiasm/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: HIFIASM_ONT {
        ext.args = { [ params.hifiasm_args, "--ont" ].join(" ").trim() }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly/hifiasm_ont/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: GFA_2_FA {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly/hifiasm/fasta" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: GFA_2_FA_HIFI {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly/hifiasm/fasta" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: GFA_2_FA_ONT {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly/hifiasm_ont/fasta" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: '.*ASSEMBLE:.*RAGTAG_PATCH' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly/ragtag/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.prefix = { "${meta.id}_assembly_patch" }
    }
}
